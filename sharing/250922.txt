function getCheckedNodesFT() {
  const tree = findWbsTree();
  if (!tree) { console.warn('[WBS] findWbsTree() = null'); return []; }

  // 1) 공식 API: 부분선택 포함(필터 제거)
  try {
    const nodes = tree.getSelectedNodes(false); // partsel도 허용
    if (nodes.length) return uniqNodes(nodes);
  } catch(_) {}

  // 2) 전체 방문: selected===true 이면 수집 (partsel 여부 무시)
  try {
    const found = [];
    tree.getRootNode()?.visit((n) => {
      if (n.selected) found.push(n);
    });
    if (found.length) return uniqNodes(found);
  } catch(_) {}

  // 3) DOM 폴백 (부분선택 허용)
  try {
    const $cont = tree.$div || $(tree.$div);
    const $cand = $cont.find(
      '.fancytree-checkbox[aria-checked="true"], ' +
      '.fancytree-node.fancytree-selected, ' +
      '.fancytree-title.fancytree-selected'
    );
    const raw = $cand.toArray()
      .map(el => $.ui.fancytree.getNode(el))
      .filter(Boolean);
    if (raw.length) return uniqNodes(raw);
  } catch (e) {
    console.warn("[WBS] DOM fallback failed", e);
  }
  return [];

  function uniqNodes(arr){
    const out = [];
    const seen = new Set();
    arr.forEach(n => {
      const key = n.key || n.getIndexHier?.() || n.title || n.data?.path?.join?.("¦");
      if (key && !seen.has(key)) { seen.add(key); out.push(n); }
    });
    return out;
  }
}



window.__WBS_DBG__?.listTrees(); // WBS 트리 확인(checkbox=true, selectMode=3 인지)

const t = (function(){
  const all = Array.from(document.querySelectorAll('.fancytree-container'))
    .map(el => $.ui.fancytree.getTree(el)).filter(Boolean);
  const task = $.ui.fancytree.getTree('#treegrid');
  return all.find(x => x !== task && !!x.options?.checkbox);
})();
console.log('selected via API =',
  t?.getSelectedNodes(false).map(n=>({title:n.title, partsel:n.partsel, selected:n.selected}))
);

window.__WBS_DBG__?.getCheckedNodesFT()
  ?.map(n=>({title:n.title, idx:n.getIndexHier?.(), partsel:n.partsel}));