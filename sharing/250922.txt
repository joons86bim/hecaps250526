-function updateEyeDom(n) {
-  if (!n?.span) return;
-  const s = calcEyeStateForNode(n);
-  const $node = $(n.span).find("> .fancytree-node");
-  const $eye = $(n.node).children("> .eye-toggle");
-  if ($eye.length === 0) {
-    const $icon = $node.find("> .fancytree-icon");
-    $icon.hide().addClass("eye-hidden");
-    $eye = $(`<span class="eye-toggle ${s}" title="가시성 토글">${Eye}</span>`);
-    $icon.before($eye);
-  } else {
-    $eye
-      .removeClass("mixed none")
-      .addClass(s)
-      .html(Eye);
-  }
-}
+function updateEyeDom(n) {
+  if (!n?.span) return;
+  const s = calcEyeStateForNode(n);
+  const $nodeSpan = $(n.span);                              // .fancytree-node 자체
+  let $eye = $nodeSpan.children(".eye-toggle");             // 직계의 eye-toggle
+  if ($eye.length === 0) {
+    const $icon = $nodeSpan.children(".fancytree-icon");    // 기본 아이콘
+    $icon.hide().addClass("eye-hidden");
+    $eye = $(`<span class="eye-toggle ${s}" title="가시성 토글">${Eye}</span>`);
+    $icon.before($eye);                                     // 아이콘 앞에 삽입
+  } else {
+    $eye.removeClass("mixed none").addClass(s).html(Eye);   // 상태만 갱신
+  }
+}

-      const $nodeSpan  = $(node.span);
+      const $nodeSpan  = $(node.span);
       const eyeState   = calcEyeStateForNode(node);
-      const $eye = $nodespan.children(".eye-toggle");
+      const $eye       = $nodeSpan.children(".eye-toggle");
       if ($eye.length) {
         $eye
           .removeClass("mixed none")
           .addClass(eyeState)
           .attr("title", "가시성 토글")
           .html(Eye);
       } else {
-        const $iconSpan  = $nodeSpan.find("> .fancytree-icon");
+        const $iconSpan  = $nodeSpan.children(".fancytree-icon");
         $iconSpan.hide().addClass("eye-hidden");
         $iconSpan.before(
           $(`<span class="eye-toggle ${eyeState}" title="가시성 토글">${Eye}</span>`)
         );
       }

-      try {
-        node.visit(updateEyeDom);
-        node.getParentList(false, true)?.forEach(updateEyeDom);
-      } catch {
+      try {
+        node.visit(updateEyeDom);                              // 본인 + 칠드런 전파
+        node.getParentList(false, true)?.forEach(updateEyeDom); // 부모는 표시만
+      } catch {
         setTimeout(() => {
           try {
-            const tree = $.ui.fancytree.getTree("#wbs-tree");
-            (node.getParent() || tree.getRootNode()).render(true);
+            const tree = $.ui.fancytree.getTree("#wbs-tree");
+            (node.getParent() || tree.getRootNode()).render(true);
           } catch {
             try { viewer.impl?.invalidate?.(true, true, true); } catch {}
           }
         }, 0);
       }