// 매트릭스가 루트 몇 개라도 c/t/d/td를 채울 때까지 대기
async function waitForMatrixPrimed(provider, timeoutMs = 1800) {
  const roots = (await provider.roots().catch(() => [])) || [];
  const keys  = roots.map(r => toKey([r.text]));
  const t0 = performance.now();

  while (performance.now() - t0 < timeoutMs) {
    const ready = keys.some(k => {
      const c = getCounts(k);
      if (!c) return false;
      const sum = (c.c|0) + (c.t|0) + (c.d|0) + (c.td|0);
      return sum > 0;
    });
    if (ready) return true;

    // 이벤트 큐 한 번 밀어주고, 혹시 모를 디바운스 해제용으로 신호 재발행
    await new Promise(r => requestAnimationFrame(r));
    await waitIdle(60);
    try { markTasksChanged(); } catch { window.__WBS_MARK_TASKS_CHANGED?.(); }
  }
  return false;
}

// 태스크 → 매트릭스 반영을 결정적으로 완료시키는 래퍼
async function ensureMatrixFromTasks(provider) {
  try { markTasksChanged(); } catch { window.__WBS_MARK_TASKS_CHANGED?.(); }
  const ok = await waitForMatrixPrimed(provider, 1800);
  if (!ok) console.warn("[matrix] priming timed out (will proceed, counts may be zero on first frame)");
}