/* ==============================
   WBS FancyTree 셀 색칠(첫 로딩 보장)
   ============================== */

// 1) 셀 색 팔레트
const __WBS_COLOR = {
  C:  "#10b981", // 시공/완료
  T:  "#f59e0b", // 가설/진행
  D:  "#ef4444", // 철거/해체
  TD: "#7c3aed"  // 동시/복합
};

// 2) CSS 주입 (행/타이틀 배경 + 좌측 보더)
function injectWbsCellCss() {
  if (document.getElementById("wbs-cell-style")) return;
  const css = `
    .fancytree-node .fancytree-title {
      border-left: 4px solid transparent;
      padding-left: 8px;
      border-radius: 6px;
      transition: background-color .15s ease, border-color .15s ease;
    }
    .wbsCell--C  .fancytree-title { background: ${__WBS_COLOR.C}1a; border-left-color: ${__WBS_COLOR.C}; }
    .wbsCell--T  .fancytree-title { background: ${__WBS_COLOR.T}1a; border-left-color: ${__WBS_COLOR.T}; }
    .wbsCell--D  .fancytree-title { background: ${__WBS_COLOR.D}1a; border-left-color: ${__WBS_COLOR.D}; }
    .wbsCell--TD .fancytree-title { background: ${__WBS_COLOR.TD}1a; border-left-color: ${__WBS_COLOR.TD}; }
  `.trim();
  const s = document.createElement("style");
  s.id = "wbs-cell-style";
  s.textContent = css;
  document.head.appendChild(s);
}

// 3) 노드 → 경로/키 → 카운트
function __wbs_countsForNode(node) {
  const D = window.__WBS_DEBUG || {};
  // __path를 심어뒀으면 우선 사용
  const path = node.data?.__path || node.getKeyPath().split("/").filter(Boolean);
  const k = D.toKey ? D.toKey(path) : (window.toKey ? window.toKey(path) : null);
  if (!k) return { total:0,c:0,t:0,d:0,td:0 };
  const c = D.getCounts ? D.getCounts(k) : {};
  return { total: c.total|0, c:c.c|0, t:c.t|0, d:c.d|0, td:c.td|0 };
}

// 4) 셀 클래스 계산(가장 많은 상태 우선, td>0이면 TD 우선)
function __wbs_classForCounts(cnt) {
  if (!cnt) return null;
  if ((cnt.td|0) > 0) return "wbsCell--TD";
  const pairs = [
    ["wbsCell--C",  cnt.c|0],
    ["wbsCell--T",  cnt.t|0],
    ["wbsCell--D",  cnt.d|0],
  ];
  pairs.sort((a,b)=>b[1]-a[1]);
  return pairs[0][1] > 0 ? pairs[0][0] : null;
}

// 5) 노드 하나 색칠
function __wbs_colorizeNode(node) {
  const $ = window.jQuery || window.$;
  if (!$ || !node || !node.span || node.isRoot?.()) return;

  const $li = $(node.li);
  const classes = ["wbsCell--C","wbsCell--T","wbsCell--D","wbsCell--TD"];
  $li.removeClass(classes.join(" "));

  const cnt = __wbs_countsForNode(node);
  const cls = __wbs_classForCounts(cnt);
  if (cls) $li.addClass(cls);
}

// 6) 트리 전체 색칠
function __wbs_colorizeTree(tree) {
  if (!tree) return;
  tree.visit(__wbs_colorizeNode);
}

// 7) Fancytree 렌더 훅 설치(첫 로딩 프레임 보장)
function installWbsCellColorizer(tree) {
  if (!tree || tree.__wbsCellColorizerInstalled) return;
  injectWbsCellCss();

  // renderNode 체이닝
  const prev = tree.options.renderNode;
  tree.$div.fancytree("option", "renderNode", function(event, data) {
    if (typeof prev === "function") prev.call(this, event, data);
    try { __wbs_colorizeNode(data.node); } catch {}
  });

  // 첫 프레임 2회 보장(렌더 직후 + 다음 프레임)
  try { __wbs_colorizeTree(tree); } catch {}
  requestAnimationFrame(() => { try { __wbs_colorizeTree(tree); } catch {} });

  // 디버그 버튼
  window.DEBUG_WBS = window.DEBUG_WBS || {};
  window.DEBUG_WBS.repaint = () => {
    try { __wbs_colorizeTree($.ui.fancytree.getTree("#wbs-tree")); } catch {}
  };

  tree.__wbsCellColorizerInstalled = true;
}