// 서브트리 전체를 미리 childrenByPath로 훑어서 id 맵을 '완전 구축'
async function ensureSubtreeReady(provider, node, cap = 20000){
  const start = node.data?.__path || buildPathFromNode(node);
  const q = [start];
  const seen = new Set();
  while (q.length && cap > 0){
    const p = q.shift();
    const key = toKey(p);
    if (seen.has(key)) continue;
    seen.add(key);
    let kids = [];
    try { kids = await provider.childrenByPath(p); } catch {}
    if (Array.isArray(kids)){
      cap -= kids.length;
      for (const ch of kids){
        const childPath = ch.__path || [...p, ch.text];
        if (ch.children === true) q.push(childPath);
      }
    }
  }
}

// 토글 전용: 미구축이면 서브트리를 강제 구축 후, 완전한 id 목록을 반환
async function getAllDbIdsForPathStrict(provider, node, path){
  // 1차: 완전체가 이미 있으면 그대로 사용
  let ids = provider.getDbIdsForPath(path, { includeDescendants:true, allowUnbuilt:false });
  if (ids && ids.length) return ids;

  // 2차: 서브트리 강제 구축 후 다시 시도
  await ensureSubtreeReady(provider, node, 20000);
  ids = provider.getDbIdsForPath(path, { includeDescendants:true, allowUnbuilt:false });
  if (ids && ids.length) return ids;

  // 3차: 마지막 안전장치(불완전하더라도 표시용으로)
  return provider.getDbIdsForPath(path, { includeDescendants:true, allowUnbuilt:true }) || [];
}